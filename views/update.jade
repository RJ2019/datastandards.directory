html
  head
    title Contribute
    include head.jade
    // custom JS functions
    script(src='/javascripts/update.js')
    script(src='/javascripts/timestamp.js')
    script(src='/javascripts/get-tags.js')
  body
    .container
      include header.jade
      .site-content
        h1.title Update Standard
        .text-container.form
          h2.form-info 
            form.update-standard
              p
                label(for='input35') Name 
                input#input35(type='text', placeholder='Input your name [optional]', name='client_name', value='')
              p
                label(for='input36') E-mail 
                input#input36(type='email', placeholder='Input your email [optional]', name='email', value='')
              p
                label(for='input37') Standard 
                select#input37.form-input(type='drop-down', name='standard')
              p#tag-display
                label(for='tag', style='margin-right: 10px') Tags
              p.metadata(style='display: none')
                input#tags.form-input(name='tags', type-'text', value='')
              p
                label(for='facet') Facet
                a(data-toggle='tooltip', title='Facets lend additional meaning to tags. If a tag is describing a particular characteristic of an open data standard (a facet), all other tags describing the same characteristic can be grouped within the same facet. Facets also allow users to filter search results by desired facet values.')
                  i.fa.fa-question-circle(aria-hidden='true')
                select#facet.form-input(name='facet', type='drop-down')
                  option(disabled='', selected='', value='') Select a facet
                  option(value='subject') Subject: 
                  option(value='dataType') Data Type: 
                  option(value='providerType') Provider Type: 
                  option(value='language') Language: 
                  option(value='keyword') Keyword: 
              p#add-tag-options(style='display: none')
                label(for='tag-value') New Tag
                a#facet-tooltip(data-toggle='tooltip', title='')
                  i.fa.fa-question-circle(aria-hidden='true')
                button#add-tag-button.small(type='button') Add Tag
                input#tag-value.form-input(name='tag', type='text', onfocus='this.value=""', placeholder='Input a value (tag) for this facet', value='')
                label#facet-label Facet:              
              p
                label(for='input39') Add Provider(s)
                input#input39(type='text', name='providers', placeholder='Add to our list of organizations publishing data in this standard', value='')
              P
                label(for='input40') Add Example(s)
                input#input40(type='text', name='examples', placeholder='Add links to datasets which have been published in this standard', value='')
              p(style='height: 110px')
                label(for='input38') Comment 
                textarea#input38(rows='5', name='comment', placeholder='Input anything regarding what needs to be updated for the standard', value='')
              p.timestamp
                input#timestamp(type='text', name='timestamp', value='')
          br
          .popup.success
            | Thank you for your contribution. We will validate and release your contribution within 7 days.
          .popup.error
          button.submit.large(type='submit', value='add') Submit
      include footer.jade
    script.
      $(".popup").hide();
      $('#contribute').addClass("selected-page");
      $("#facet").on('change', function(){
        $("#add-tag-options").show();
        $("#facet-label").html($("#facet option:selected").text());
        switch($(this).val()){
          case "subject":
            $("#facet-tooltip").attr('title', "This facet is used to separate tags specifying the subject matter a data standard is used to describe. Similar to the original purpose of the “Category” attribute, this facet is meant to classify non-exclusive descriptors specifying the content of a dataset in a standard. Values might include subjects more specific to a category such as “Financial”. For example, Checkbook NYC specifies annual budget, expenditure, and procurement contracts.");
            break;
          case "dataType":
            $("#facet-tooltip").attr('title', "Some standards specify a format in which data must be serialized, such as XML or CSV, while some standards merely specify element or attribute names, allowing users to publish in any machine-readable format. Some standards specify multiple data files in different formats. In such cases a standard can have multiple dataType tags for different formats. dataType can also be used to describe standards that don’t require static datasets. The tag “dataType:static” can be used to distinguish the former. Standards that don’t specify published datasets might have the values “metadata” or “ontology”. Standards used for data exchange between hardware systems (such as TCIP or EML) can also be distinguished from published static datasets with the tag “dataType:hardware”.");
            break;
          case "providerType":
            $("#facet-tooltip").attr('title', "This Directory was originally conceived to hold standards for governmental open data, yet some standards are used in the private sector or by non-governmental organizations. All standards currently in the Directory featuring a list of data providers are public-sector standards. Their associated lists include names of cities or government agencies. Many standards, such as WaterML are not used specifically in government publications and therefore might receive the values “public” and “private”. A third value, “non-profit” is likely also necessary to describe some open data standards.");
            break;
          case "language":
            $("#facet-tooltip").attr('title', "Most entries in the Directory require the use of English element names and attributes. Many standard publishers provide documentation in languages other than English that describe language compatibility issues and solutions.");
            break;
          case "keyword":
            $("#facet-tooltip").attr('title', "Any tags that do not describe a facet of a standard should be qualitative descriptors of the standard or other miscellaneous attributes. The value 'GitHub' can denote an open standard that is maintained on GitHub. The value 'CKAN' can denote a standard that is compatible with the CKAN open data system. The value 'API' should be given to standards whose publishers or a third party has provided an API for sharing data in that standard. Common qualitative keywords are 'transparency' and 'open government'.");
            break;
        }
        suggestTags();
      });
      $("#add-tag-button").on('click', function(){
        var facetText = $("#facet option:selected").text();
        var facetVal = $("#facet").val();
        var tagVal = $("#tag-value").val();
        var newButton = "<button type='button' class='tag' value='" + facetVal + ":" + tagVal + "'><strong style='color: gray' class='remove-tag'>X</strong> <b>" + facetText + "</b>" + tagVal + "</button>"
        $("#tag-display").append(newButton)
        //reset facet dropdown list and tag input
        $("#facet").prop('selectedIndex', 0)
        $("#add-tag-options").hide();
        $("#tag-value").val('');
        //"X" to remove tag
        $(".remove-tag").on('click', function(){
          $(this).parent().remove();
        });
      });
      //concatenates values of all tags and sets value of hidden input
      //this input is what is found in add.js
      function serializeTags(){
        var tagsObject = '';
        $(".tag").each(function(){
          tagsObject += $(this).val() + "|";
        });
        $("#tags").val(tagsObject);
      }
      var allstandards = [];
      var options = document.getElementById("input37");
      var url = location.origin;
      // This function fills in #input37 dropdown menu
      $.getJSON(url + "/api/get/all", function(standards) {
        $.each(standards.data, function(i) {
          allstandards.push(standards.data[i].name);
        });
        allstandards.sort();
        options.innerHTML = '<option default value="default">Select what standard needs to be updated</option>';
        $.each(allstandards, function(i, el){
          options.innerHTML += '<option value="' + allstandards[i] + '">' + allstandards[i] + '</option>';
        });
        var search = location.search.substring(1); // removes '?' symbol from querystring
        if(search.length > 2){
          search = decodeURI(search);
          options.value = search;
        }
        if(options.value != "default"){
          getTags(options.value);
        }
      });
      $(options).on('change', function(){
        $(".tag").remove();
        getTags(options.value);
      })
      // submit form
      $(".submit").click(function(){
        serializeTags();
        $(".popup").hide();
        var form = $(".update-standard");
        console.log(form)
        postUpdate(form);
        //Google form autofill
        /*
        var formURLbase = 'https://docs.google.com/forms/d/e/1FAIpQLScAvZj5HUFHZtcJ6SofF8CMtbVy0lkuDwYwQDNgUavDPY5Avw/formResponse';
        var nameURL = '?entry.1092914073=' + $("#input35").val();
        var emailURL = '&entry.679147926=' + $("#input36").val();
        var standardURL = '&entry.1888358654=' + $("#input37").val();
        var commentURL = '&entry.869466190=' + $("#input38").val();
        var providersURL = '&entry.1439856983=' + $("#input39").val();
        var examplesURL = '&entry.141248292=' + $("#input40").val();
        var formURL = formURLbase + nameURL + emailURL + standardURL + commentURL + providersURL + examplesURL + '&submit=Submit';
        console.log(formURL);
        window.open(formURL, '_blank');
        */
      });
